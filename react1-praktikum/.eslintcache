[{"D:\\reactJS\\react1-praktikum\\src\\index.js":"1","D:\\reactJS\\react1-praktikum\\src\\App.js":"2","D:\\reactJS\\react1-praktikum\\src\\Components\\Bmi.js":"3","D:\\reactJS\\react1-praktikum\\src\\Components\\Alert.js":"4","D:\\reactJS\\react1-praktikum\\src\\Components\\Cicilan.js":"5","D:\\reactJS\\react1-praktikum\\src\\Components\\Ppn.js":"6","D:\\reactJS\\react1-praktikum\\src\\Components\\Konversi.js":"7"},{"size":350,"mtime":1611650914616,"results":"8","hashOfConfig":"9"},{"size":446,"mtime":1611650872981,"results":"10","hashOfConfig":"9"},{"size":3120,"mtime":1611536619777,"results":"11","hashOfConfig":"9"},{"size":547,"mtime":1611530649401,"results":"12","hashOfConfig":"9"},{"size":3530,"mtime":1611532690169,"results":"13","hashOfConfig":"9"},{"size":2842,"mtime":1611533009616,"results":"14","hashOfConfig":"9"},{"size":3766,"mtime":1611533786584,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"hevxcg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"19"},"D:\\reactJS\\react1-praktikum\\src\\index.js",["34","35"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n",["36","37"],"D:\\reactJS\\react1-praktikum\\src\\App.js",[],"D:\\reactJS\\react1-praktikum\\src\\Components\\Bmi.js",[],"D:\\reactJS\\react1-praktikum\\src\\Components\\Alert.js",[],["38","39"],"D:\\reactJS\\react1-praktikum\\src\\Components\\Cicilan.js",[],"D:\\reactJS\\react1-praktikum\\src\\Components\\Ppn.js",[],"D:\\reactJS\\react1-praktikum\\src\\Components\\Konversi.js",["40","41","42","43","44","45","46","47"],"// import library\r\nimport React, { Component } from \"react\";\r\n\r\nclass Konversi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"10\",\r\n      output: \"10\",\r\n      nilai: \"\",\r\n      hasil: \"\",\r\n    };\r\n    this.nilaiChange = this.nilaiChange.bind(this);\r\n    this.outputChange = this.outputChange.bind(this);\r\n    this.inputChange = this.inputChange.bind(this);\r\n  }\r\n\r\n  inputChange(event) {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  outputChange(event) {\r\n    this.setState({ output: event.target.value });\r\n  }\r\n\r\n  nilaiChange(event) {\r\n    this.setState({ nilai: event.target.value });\r\n  }\r\n\r\n  konversi = (event) => {\r\n    const basisInput = parseInt(this.state.input);\r\n    const basisOutput = parseInt(this.state.output);\r\n    const input = parseInt(this.state.nilai);\r\n\r\n    // Proses Konversi\r\n    if (\r\n      basisInput == 10 ||\r\n      basisInput == 8 ||\r\n      basisInput == 2 ||\r\n      basisInput == 16\r\n    ) {\r\n      // DESIMAL - OKTAL - BINER - HEXA (Input)\r\n      if (\r\n        basisOutput == 10 ||\r\n        basisOutput == 8 ||\r\n        basisOutput == 2 ||\r\n        basisOutput == 16\r\n      ) {\r\n        // DESIMAL - OKTAL - BINER - HEXA (Output)\r\n        let hasil = parseInt(input, basisInput)\r\n          .toString(basisOutput)\r\n          .toUpperCase();\r\n        this.setState({ hasil: hasil });\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card col-sm-5 mx-auto m-5 text-center\">\r\n        <div class=\"card-header bg-secondary text-light\">\r\n          <h4>Konversi Bilangan</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          {/* Input Bilangan */}\r\n          {/* <!-- Menu DropDown --> */}\r\n          <div class=\"input-group mb-2\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\" for=\"basisInput\">\r\n                Bilangan :{\" \"}\r\n              </label>\r\n            </div>\r\n            <select\r\n              class=\"custom-select\"\r\n              value={this.state.input}\r\n              onChange={this.inputChange}\r\n            >\r\n              <option value=\"10\">Desimal</option>\r\n              <option value=\"8\">Oktal</option>\r\n              <option value=\"2\">Biner</option>\r\n              <option value=\"16\">hexa</option>\r\n            </select>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control mb-2 text-center\"\r\n            value={this.state.nilai}\r\n            onChange={this.nilaiChange}\r\n          />\r\n\r\n          {/* <!-- Menu DropDown --> */}\r\n          <div class=\"input-group mb-2\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\" for=\"basisOutput\">\r\n                Konversi Ke :{\" \"}\r\n              </label>\r\n            </div>\r\n            <select\r\n              class=\"custom-select\"\r\n              value={this.state.output}\r\n              onChange={this.outputChange}\r\n            >\r\n              <option value=\"10\">Desimal</option>\r\n              <option value=\"8\">Oktal</option>\r\n              <option value=\"2\">Biner</option>\r\n              <option value=\"16\">hexa</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-success form-control\"\r\n            onClick={this.konversi}\r\n          >\r\n            Convert\r\n          </button>\r\n          <h4 className=\"text-center mt-4\">Hasil</h4>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control mt-3 text-center\"\r\n            value={this.state.hasil}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Konversi;\r\n",{"ruleId":"48","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":9},{"ruleId":"48","severity":1,"message":"52","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":14},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":37,"column":18,"nodeType":"61","messageId":"62","endLine":37,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":38,"column":18,"nodeType":"61","messageId":"62","endLine":38,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":39,"column":18,"nodeType":"61","messageId":"62","endLine":39,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":40,"column":18,"nodeType":"61","messageId":"62","endLine":40,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":44,"column":21,"nodeType":"61","messageId":"62","endLine":44,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":45,"column":21,"nodeType":"61","messageId":"62","endLine":45,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":46,"column":21,"nodeType":"61","messageId":"62","endLine":46,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":47,"column":21,"nodeType":"61","messageId":"62","endLine":47,"endColumn":23},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]